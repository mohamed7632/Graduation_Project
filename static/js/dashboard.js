var ctx1 = document.getElementById('myBarChart').getContext('2d');
var myBarChart = new Chart(ctx1, {
    type: 'bar',
    data: {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [{
            label: '# of Votes',
            data: [12, 19, 3, 5, 2, 3],
            backgroundColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1,
            borderColor: '#000'
        }]
    },
    options: {
        scales: {
            y: {
                beginAtZero: true
            }
        },
        layout: {
            padding: {
                left: 50, right: 50
            }
        }
    }
});
var ctx2 = document.getElementById('myLineChart').getContext('2d');
var myLineChart = new Chart(ctx2, {
    type: 'bar',
    data: {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [{
            label: '# of Votes',
            data: [12, 19, 3, 5, 2, 3],
            backgroundColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            // borderColor: [
            //     'rgba(146, 277, 169, 1)',
            //     'rgba(54, 162, 235, 1)',
            //     'rgba(255, 206, 86, 1)',
            //     'rgba(75, 192, 192, 1)',
            //     'rgba(153, 102, 255, 1)',
            //     'rgba(255, 159, 64, 1)'
            // ],
            // borderWidth:3
        }]
    },
    options: {
        scales: {
            y: {
                beginAtZero: true
            }
        }
    }
});
var ctx3 = document.getElementById('myPieChart').getContext('2d');
var myPieChart = new Chart(ctx3, {
    type: 'line',
    data: {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [
            {
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
    },
    options: {
        scales: {
            y: {
                beginAtZero: true
            }
        }
    }
});
var ctx4 = document.getElementById('myDoudhuntChart').getContext('2d');
var myPieChart = new Chart(ctx4, {
    type: 'doughnut',
    data: {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [
            {
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                position: 'top',
            },
            title: {
                display: true,
                text: 'Chart.js Doughnut Chart'
            }
        }

    }
});


// import { Chart } from 'chart.js';
// import { WordCloudController, WordElement } from 'chartjs-chart-wordcloud';

// Chart.register(WordCloudController, WordElement);

// const data = {
//     labels: ['Hello', 'world', 'normally', 'you', 'want', 'more', 'words', 'than', 'this'],
//     datasets: [
//         {
//             label: 'DS',
//             // size in pixel
//             data: [90, 80, 70, 60, 50, 40, 30, 20, 10],
//         },
//     ],
// };
// var ctx5 = document.getElementById("myWordcloudChart").getContext('2d')
// var myWordcloud = new Chart(ctx5, {
//     type: 'wordCloud',
//     data: data,
//     options: {
//         title: {
//             text: 'Chart.js Word Cloud',
//         },
//         plugins: {
//             legend: {
//                 display: false,
//             },
//         },
//     },
// });
// 

const data = {
    labels: ['phone',
        'iPhone',
        'great',
        'new',
        'Apple',
        'condition',
        'one',
        'good',
        'came',
        'battery life',
        'love',
        'perfect',
        'work',
        'screen',
        'battery',
        'charger',
        'brand new',
        'renewed',
        'even',
        'scratches',
        'will',
        'unlocked',
        'still',
        'use',
        'buy',
        'day',
        'Amazon',
        'purchase',
        'used',
        'quality',
        'arrived',
        'box',
        'product',
        'price',
        'small',
        'battery health',
        'got',
        'better',
        'said',
        'really',
        'charge',
        'less',
        'little',
        'recommend',
        'time',
        'charging',
        'mini',
        'look',
        'review',
        'Excellent',
        'come',
        'return',
        'much',
        'far',
        'amazing',
        'last',
        'issue',
        'network',
        'iPhone mini',
        'carrier',
        'don',
        'pleased',
        'bought',
        'back',
        'super',
        'received',
        'say',
        'camera',
        'going',
        'Pro',
        'happy',
        'size',
        'feature',
        'SIM card',
        'sim',
        'fast',
        'Beautiful',
        'deal',
        'worth',
        'nothing',
        'right',
        'know',
        'thing',
        'XR',
        'absolutely',
        '5G',
        'want',
        'make',
        've',
        'lot',
        'go',
        'cable',
        'app',
        'ordered',
        'didn',
        'adapter',
        'scratch',
        'working',
        'money',
        'model',
        'packaging',
        'Samsung',
        'case',
        'tell',
        'highly',
        'using',
        'reason',
        'bad',
        'think',
        'ok',
        'plus',
        'two',
        'expect',
        'always',
        'Reset',
        'nice',
        'seller',
        'shape',
        'definitely',
        'la',
        'easy',
        'refurbished',
        'fine',
        'difference',
        'display',
        'least',
        'pay',
        'sometimes',
        'never',
        'original',
        'well',
        'star',
        'many',
        'set',
        'magsafe',
        'Verizon',
        'service',
        'Setting',
        'side',
        'read',
        'took',
        'device',
        'experience',
        'longer',
        'first',
        'fully unlocked',
        'face recognition',
        'screen protector',
        'need',
        'thought',
        'problems',
        'Awesome',
        'give',
        'tool',
        'hours',
        'blue',
        'looked',
        'value',
        'best',
        'due',
        'anything',
        'con',
        'buying',
        'though',
        'almost',
        'may',
        'noticeable',
        'course',
        'guess',
        'mention',
        'previous',
        'made',
        'without',
        'part',
        'mine',
        'top',
        'see',
        'years',
        'turned',
        'drop',
        'way',
        'month',
        'early',
        'overall',
        'able',
        'prime',
        'real',
        'something',
        'take',
        'making',
        'wireless',
        'talk',
        'cost',
        'smart',
        'week',
        'straight',
        'battery capacity',
        'works perfectly',
        'cheap',
        'quickly',
        'video',
        'shipping',
        're',
        'mint',
        'account',
        'mean',
        'renew',
        'cosmetic',
        'maybe',
        'regular',
        'wrong',
        'asked',
        'en',
        'de',
        'worried',
        'crack',
        'fix',
        'nervous',
        'lo',
        'el',
        'bien',
        'cell',
        'version',
        'guy',
        'Excelente',
        'upgraded',
        'notice',
        'actually',
        'upgrade',
        'went',
        'doesn',
        'power',
        'cord',
        'won',
        'wish',
        'old',
        'different',
        'another',
        'terrible',
        'accessories',
        'item',
        'satisfied',
        'Android',
        'mode',
        'bottom',
        'corner',
        'Literally',
        'iOS',
        'call',
        'sound',
        'fixed',
        'red',
        'people',
        'keep',
        'usually',
        'especially',
        'now',
        'today',
        'huge',
        'Car',
        'getting',
        'couldn',
        'left',
        'properly',
        'everything',
        'easily',
        'smaller',
        'find',
        'pretty',
        'bit',
        'try',
        'tower',
        'scam',
        'expected',
        'disappointed',
        'perfecto',
        'wouldn',
        'kept',
        'color',
        'user',
        'll',
        'music',
        'happen',
        'put',
        'sealed',
        'lie',
        'browser support',
        'support HTML5',
        'HTML5 video',
        'back tap',
        'coming',
        'include',
        'USB',
        'minor',
        'data',
        'next',
        'fully',
        'heard',
        'friends',
        'soon'],


    datasets: [
        {
            color: ['#92E3A9', '#77AF9C','#77AF9C','#1C6E8C','#7F5A83','#087F8C'],
            rotationSteps: 4,
            minRotation: -90,
            maxRotation: 180,
            padding:2,
            label: '',
            data: [139,
                61,
                48,
                34,
                32,
                32,
                32,
                30,
                28,
                27,
                26,
                25,
                24,
                23,
                22,
                21,
                21,
                20,
                19,
                19,
                18,
                16,
                16,
                16,
                15,
                15,
                15,
                14,
                14,
                14,
                13,
                13,
                13,
                13,
                13,
                13,
                12,
                12,
                12,
                12,
                12,
                11,
                11,
                11,
                11,
                10,
                10,
                10,
                10,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                9,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                7,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2]

            ,
        },
    ],
};
const ctx6 = document.getElementById('myWordcloudChart').getContext('2d');
window.myBar = new Chart(ctx6, {
    type: 'wordCloud',
    data: data,
    options: {
        responsive: true,
        title: {
            display: false,
            text: 'Chart.js Word Cloud',
        },
        plugins: {
            legend: {
                display: false,
            },
        },
        layout: {
            padding: {
                left: 100, right: 50
            }
        }
    },
});


// fetch('https://unpkg.com/us-atlas/states-10m.json')
//     .then((r) => r.json())
//     .then((eg) => {
//         const nation = ChartGeo.topojson.feature(eg, eg.objects.nation).features[0];
//         const states = ChartGeo.topojson.feature(eg, eg.objects.states).features;

//         const chart = new Chart(document.getElementById('myGeo').getContext('2d'), {
//             type: 'choropleth',
//             data: {
//                 labels: ['California', 'Maryland', 'North Dakota', 'New York', 'Rhode Island'],
//                 datasets: [
//                     {
//                         label: 'States',
//                         outline: nation,
//                         data: [800,480,100,1200,]
//                     }
//                 ],
//             },
//             options: {
//                 plugins: {
//                     legend: {
//                         display: false,
//                     },
//                 },
//                 scales: {
//                     xy: {
//                         projection: 'albersUsa',
//                     },
//                     color: {
//                         type: 'colorLogarithmic',
//                         legend: {
//                             position: 'bottom-right',
//                             align: 'right',
//                         },
//                     },
//                 },
//             },
//         });
//     });





